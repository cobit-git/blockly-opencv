// This file was automatically generated.  Do not modify.

'use strict';

Blockly.Msg["ADD_COMMENT"] = "Yorum Ekle";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "'%1' değişkeni, '%2' fonksiyonunun tanımının bir parçası olduğu için silinemez";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Değeri değiştir:";
Blockly.Msg["CLEAN_UP"] = "Blokları Temizle";
Blockly.Msg["COLLAPSED_WARNINGS_WARNING"] = "Daraltılmış bloklar uyarı içerir.";
Blockly.Msg["COLLAPSE_ALL"] = "Blokları Daralt";
Blockly.Msg["COLLAPSE_BLOCK"] = "Bloğu Daralt";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "1. renk";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "2. renk";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg["COLOUR_BLEND_RATIO"] = "oran";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "karıştır";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Verilen bir orana (0.0 - 1.0) bağlı olarak iki rengi karıştırır.";
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://tr.wikipedia.org/wiki/Renk";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Paletten bir renk seç.";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "rastgele renk";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Rastgele bir renk seç.";
Blockly.Msg["COLOUR_RGB_BLUE"] = "mavi";
Blockly.Msg["COLOUR_RGB_GREEN"] = "yeşil";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg["COLOUR_RGB_RED"] = "kırmızı";
Blockly.Msg["COLOUR_RGB_TITLE"] = "renk değerleri";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Kırmızı, yeşil ve mavinin belirli miktarıyla bir renk oluştur.  Tüm değerler 0 ile 100 arasında olmalıdır.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "döngüden çık";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "döngünün sonraki adımından devam et";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "İçeren döngüden çık.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Bu döngünün geri kalanını atlayın ve sonraki adım ile devam edin.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Uyarı: Bu blok sadece bir döngü içinde kullanılabilir.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "her öğe için %1 listede %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Bir listedeki her öğe için  '%1' değişkenini maddeye atayın  ve bundan sonra bazı açıklamalar yapın.";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "ile sayılır %1 %2 den %3 ye, her adımda %4 değişim";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Başlangıç sayısından bitiş sayısına kadar belirtilen aralık ve belirtilen engeller ile devam eden değerler alan '%1' değişkeni oluştur.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "If bloğuna bir koşul ekleyin.";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "If bloğuna kalan durumları \"yakalayan\" bir son ekle.";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "If bloğuna ekle, kaldır veya yeniden düzenleme yap.";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "değilse";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "değilse eğer";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "eğer";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Eğer değişken true, yani gerçekleşmiş ise ardından gelen işlemi yerine getir.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Eğer değişken true, yani gerçekleşiyor ise ilk bloktaki işlemleri yerine getir. Aksi halde ikinci bloktaki işlemleri yerine getir.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Eğer ilk değişken true, yani koşul gerçekleşmiş ise ilk blok içerisindeki işlemi gerçekleştir. Eğer ikinci değişken true ise, ikinci bloktaki işlemi gerçekleştir.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Eğer ilk değer true, yani olumlu ise, ilk bloktaki işlemi gerçekleştir. İlk değer true değil ama ikinci değer true ise, ikinci bloktaki işlemi gerçekleştir. Eğer değerlerin hiçbiri true değil ise son bloktaki işlemi gerçekleştir.";
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://tr.wikipedia.org/wiki/For_döngüsü";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "yap";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "%1 kez tekrarla";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Bazı işlemleri birkaç kez yap.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "kadar tekrarla";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "tekrar ederken";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Bir değer yanlış olduğunda bazı beyanlarda bulun.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Bir değer doğru olduğunda bazı beyanlarda bulun.";
Blockly.Msg["CV_ADD_IMAGE"] = "Add 2 images image1 %1 and image2 %2 save to %3";  // untranslated
Blockly.Msg["CV_ADD_IMAGE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_ADD_IMAGE_TOOLTIP"] = "Add 2 images (saturation operation)";  // untranslated
Blockly.Msg["CV_BASIC_CHG_PIXEL"] = "Change pixel value from image %1 X: %2 Y: %3 %4 as %5";  // untranslated
Blockly.Msg["CV_BASIC_CHG_PIXEL_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_CHG_PIXEL_TOOLTIP"] = "Cahnge specified pixel RGB value";  // untranslated
Blockly.Msg["CV_BASIC_COPY_ROI"] = "Copy ROI %1 to image %2 start: %3 end: %4";  // untranslated
Blockly.Msg["CV_BASIC_COPY_ROI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_COPY_ROI_TOOLTIP"] = "Copy ROI image array to an specified area of the image ";  // untranslated
Blockly.Msg["CV_BASIC_END_ROI"] = "Y from %1 to %2";  // untranslated
Blockly.Msg["CV_BASIC_END_ROI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_END_ROI_TOOLTIP"] = "End point of ROI(region of interest)";  // untranslated
Blockly.Msg["CV_BASIC_GET_PINFO"] = "Get pixel color from image %1 X: %2 Y: %3 %4 blue %5 green %6 red %7";  // untranslated
Blockly.Msg["CV_BASIC_GET_PINFO_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_GET_PINFO_TOOLTIP"] = "Get speified pixel RGB value";  // untranslated
Blockly.Msg["CV_BASIC_GET_ROI"] = "Get ROI(region of interest) from image: %1 with start %2 end %3 ROI image: %4";  // untranslated
Blockly.Msg["CV_BASIC_GET_ROI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_GET_ROI_TOOLTIP"] = "Get ROI(region of interest) of the image";  // untranslated
Blockly.Msg["CV_BASIC_GET_SIZE"] = "Get size of image %1 size: %2";  // untranslated
Blockly.Msg["CV_BASIC_GET_SIZE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_GET_SIZE_TOOLTIP"] = "Get size of the image";  // untranslated
Blockly.Msg["CV_BASIC_RGB"] = "R %1 , G %2, B %3";  // untranslated
Blockly.Msg["CV_BASIC_RGB_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_RGB_TOOLTIP"] = "RGB value";  // untranslated
Blockly.Msg["CV_BASIC_START_ROI"] = "X from %1 to %2";  // untranslated
Blockly.Msg["CV_BASIC_START_ROI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_START_ROI_TOOLTIP"] = "Start point of ROI(region of interest)";  // untranslated
Blockly.Msg["CV_BITWISE_AND"] = "Do bitwise AND operation image1 %1 and image2 %2 save to %3";  // untranslated
Blockly.Msg["CV_BITWISE_AND_TOOLTIP"] = "Bitwise AND operation of the 2 images";  // untranslated
Blockly.Msg["CV_BITWISE_NOT"] = "Do bitwise NOT operation to image %1 save to %2";  // untranslated
Blockly.Msg["CV_BITWISE_NOT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BITWISE_NOT_TOOLTIP"] = "Bitwise NOT operation of the image";  // untranslated
Blockly.Msg["CV_BITWISE_OR"] = "Do bitwise OR operation image1 %1 and image2 %2 save to %3";  // untranslated
Blockly.Msg["CV_BITWISE_OR_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BITWISE_OR_TOOLTIP"] = "Bitwise OR operation of the 2 images";  // untranslated
Blockly.Msg["CV_CON_FEATURE_APPROX"] = "Get approximated curve of contour %1 with %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_APPROX_CLOSED"] = "closed curve";  // untranslated
Blockly.Msg["CV_CON_FEATURE_APPROX_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_APPROX_OPEN"] = "non-closed curve";  // untranslated
Blockly.Msg["CV_CON_FEATURE_APPROX_TOOLTIP"] = "Get approximated curve of the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_AREA"] = "Get area of contour %1 save to %2";  // untranslated
Blockly.Msg["CV_CON_FEATURE_AREA_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_AREA_TOOLTIP"] = "Get area of the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_BOUNDING"] = "Draw rectangle to image %1 bounding the contour  %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_BOUNDING_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_BOUNDING_TOOLTIP"] = "Draw rectangle which is bounding the contour outside";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CENTER"] = "Get center of contour line %1 center X: %2 Y: %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CENTER_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CENTER_TOOLTIP"] = "Get center point of the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CONHULL"] = "Get convex hull curve from contour %1 save to %2";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CONHULL_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CONHULL_TOOLTIP"] = "Get convex hull curve of the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_EX_POINT"] = "Get 4 extream points for contour %1 left %2 right %3 top %4 bottom %5";  // untranslated
Blockly.Msg["CV_CON_FEATURE_EX_POINT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_EX_POINT_TOOLTIP"] = "Get 4 extream points for contour - left, right, bottom, top";  // untranslated
Blockly.Msg["CV_CON_FEATURE_FIT_ELLIPSE"] = "Draw ellipse curve to image %1 fitted for contour %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_FIT_ELLIPSE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_FIT_ELLIPSE_TOOLTIP"] = "Draw ellipse curve fitted for contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_CIRCLE"] = "Draw minimum enclosing circle to image %1 for contour  %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_CIRCLE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_CIRCLE_TOOLTIP"] = "Draw minimum area circle that enclose the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_RECT"] = "Draw minimum area rectangle to image %1 for contour  %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_RECT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_RECT_TOOLTIP"] = "Draw rectangle which occupy minimum area of the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_PERI"] = "Get perimeter of contour %1 with %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_PERI_CLOSED"] = "closed curve";  // untranslated
Blockly.Msg["CV_CON_FEATURE_PERI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_PERI_OPEN"] = "non-closed curve";  // untranslated
Blockly.Msg["CV_CON_FEATURE_PERI_TOOLTIP"] = "Get perimeter of the contour";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_CAM"] = "Create videocapture %1 for camera %2";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_CAM_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_CAM_TOOLTIP"] = "Create video capture instance for read video image from camera ";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_FILE"] = "Create videocapture %1 for file %2";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_FILE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_FILE_TOOLTIP"] = "Create video capture instance for read video image from video file ";  // untranslated
Blockly.Msg["CV_CVT_COLOR"] = "Convert color space of %1 image:  %2 with option %3 %4 and save to  %5";  // untranslated
Blockly.Msg["CV_CVT_COLOR_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CVT_COLOR_TOOLTIP"] = "Convert color space of the image";  // untranslated
Blockly.Msg["CV_DESTROY_ALL_WINDOW"] = "Destroy all window";  // untranslated
Blockly.Msg["CV_DESTROY_ALL_WINDOW_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DESTROY_ALL_WINDOW_TOOLTIP"] = "Close image display window";  // untranslated
Blockly.Msg["CV_DRAW_CENTER"] = "center: %1 , %2";  // untranslated
Blockly.Msg["CV_DRAW_CENTER_TOOLTIP"] = "Center point(tuple) for circle";  // untranslated
Blockly.Msg["CV_DRAW_CIRCLE"] = "Draw circle on image %1 center: %2 radian: %3 color: %4 %5 thick: %6";  // untranslated
Blockly.Msg["CV_DRAW_CIRCLE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_CIRCLE_TOOLTIP"] = "Draw a circle on the image";  // untranslated
Blockly.Msg["CV_DRAW_CONTOUR"] = "Draw contours lines of index %3 on image: %1  from contour list %2 color: %4 thick: %5 save to %6";  // untranslated
Blockly.Msg["CV_DRAW_CONTOUR_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_CONTOUR_TOOLTIP"] = "Draw contours lines on the image";  // untranslated
Blockly.Msg["CV_DRAW_CREATE_B_IMAGE"] = "Create black color image %1 x size: %2 y size: %3";  // untranslated
Blockly.Msg["CV_DRAW_CREATE_B_IMAGE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_CREATE_B_IMAGE_TOOLTIP"] = "Create black color image using numpy with given pixel size";  // untranslated
Blockly.Msg["CV_DRAW_END"] = "end: %1 , %2";  // untranslated
Blockly.Msg["CV_DRAW_END_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_END_TOOLTIP"] = "End point(tuple) for line or rectangle";  // untranslated
Blockly.Msg["CV_DRAW_LINE"] = "Draw line on image %1 start: %2 end: %3 color: %4 %5 thick: %6";  // untranslated
Blockly.Msg["CV_DRAW_LINE_TOOLTIP"] = "Draw a line on the image";  // untranslated
Blockly.Msg["CV_DRAW_LINE__HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_PUT_TEXT"] = "Put text of %1 on image %2 origin: %3 scale: %4 %5 colour: %6";  // untranslated
Blockly.Msg["CV_DRAW_PUT_TEXT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_PUT_TEXT_TOOLTIP"] = "Put text on the image";  // untranslated
Blockly.Msg["CV_DRAW_RAD_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_RECT"] = "Draw rectangle on image %1 start: %2 end: %3 color: %4 %5 thick: %6";  // untranslated
Blockly.Msg["CV_DRAW_RECT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_RECT_TOOLTIP"] = "Draw a rectangle on the image";  // untranslated
Blockly.Msg["CV_DRAW_START"] = "start: %1 , %2";  // untranslated
Blockly.Msg["CV_DRAW_START_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_START_TOOLTIP"] = "Start point(tuple) for line, or rectangle";  // untranslated
Blockly.Msg["CV_DRAW_TEXT_ORG"] = "origin: %1 , %2";  // untranslated
Blockly.Msg["CV_DRAW_TEXT_ORG_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_TEXT_ORG_TOOLTIP"] = "Origin point(tuple) for test input. Bottom-left corner";  // untranslated
Blockly.Msg["CV_EDGE_CANNY"] = "Detect edge of image %1 uisng Canny by hysteresis min %2 hysteresis max %3 save to %4";  // untranslated
Blockly.Msg["CV_EDGE_CANNY_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_EDGE_CANNY_TOOLTIP"] = "Detect edge of the image using Canny method";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR"] = "Find all contour lines on image:  %1 mode: %2 %3 method:  %4 save to %5";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_ALL_1H"] = "all lines(2 hierachy)";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_ALL_AH"] = "all lines(all hierachy)";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_ALL_LINE"] = "all lines(no hierachy)";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_APP_NONE"] = "save all contours points";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_APP_SIMPLE"] = "save only effective points";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_APP_TC89KC05"] = "using TC89_KC05 algorithm";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_APP_TC89L1"] = "using TC89_L1 algorithm";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_EX_LINE"] = "external line only";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_TOOLTIP"] = "Find all contour lines on the image";  // untranslated
Blockly.Msg["CV_GET_HUE_VALUE"] = "Get hue value for R %1 G %2 B %3 %4 and save to  %5";  // untranslated
Blockly.Msg["CV_GET_HUE_VALUE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_GET_HUE_VALUE_TOOLTIP"] = "With this block, the user can get hue value from specified RGB value";  // untranslated
Blockly.Msg["CV_IMAGE_READ"] = "Read image file  %1 %2 save to %3 %4 attribute %5";  // untranslated
Blockly.Msg["CV_IMAGE_READ_GRAYSCALE"] = "as gray scale";  // untranslated
Blockly.Msg["CV_IMAGE_READ_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IMAGE_READ_TOOLTIP"] = "Read a image from image file";  // untranslated
Blockly.Msg["CV_IMAGE_READ_UNCHANGED"] = "unchanged";  // untranslated
Blockly.Msg["CV_IMAGE_READ_WITHOUT_ALPHA"] = "without alpha";  // untranslated
Blockly.Msg["CV_IMAGE_SHAPE"] = "Get info of image %1 info:  %2 %3 %4";  // untranslated
Blockly.Msg["CV_IMAGE_SHAPE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IMAGE_SHAPE_TOOLTIP"] = "Get information of image shape - rows, columns, channels(e.g. RGB, BW)";  // untranslated
Blockly.Msg["CV_IMAGE_SHOW"] = "Show a image on window  name: %1 image: %2 %3";  // untranslated
Blockly.Msg["CV_IMAGE_SHOW_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IMAGE_SHOW_TOOLTIP"] = "Show a image on window";  // untranslated
Blockly.Msg["CV_IMAGE_THERSH_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IMAGE_THRESHOLD"] = "Get threshold-filtered image from  image %1 threshold value: %2 option %3 save to %4";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_ATTR_BINARY"] = "binary";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_ATTR_BINARY_INV"] = "binary inverse";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_ATTR_TOZERO"] = "to zero";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_ATTR_TOZERO_INV"] = "to zero inverse";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_ATTR_TRUNC"] = "truncation";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_TOOLTIP"] = "Get theshold filtered image from original image";  // untranslated
Blockly.Msg["CV_IMAGE_WRITE"] = "Save image %1 as %2";  // untranslated
Blockly.Msg["CV_IMAGE_WRITE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IMAGE_WRITE_TOOLTIP"] = "Save image as image file";  // untranslated
Blockly.Msg["CV_IN_RANGE"] = "Get masked HSV image from  image %1 HSV low limit: %2 HSV upper limit:  %3 and save to  %4";  // untranslated
Blockly.Msg["CV_IN_RANGE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IN_RANGE_TOOLTIP"] = "Get masked HSV imamge from upper HSV value and lower HSV value";  // untranslated
Blockly.Msg["CV_LOWER_LIMIT"] = "HSV color lower limit %1 H: %2 S: %3 V: %4";  // untranslated
Blockly.Msg["CV_LOWER_LIMIT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_LOWER_LIMIT_TOOLTIP"] = "HSV lower limit value for cv2.inRange() function";  // untranslated
Blockly.Msg["CV_MORPH_DILATION"] = "Dilation of image: %1 fill up count: %2 save to %3";  // untranslated
Blockly.Msg["CV_MORPH_DILATION_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_MORPH_DILATION_TOOLTIP"] = "Perform dilation of the image to remove small vacant hole";  // untranslated
Blockly.Msg["CV_MORPH_ERODE"] = "erode the image: %1 run count: %2 save to %3";  // untranslated
Blockly.Msg["CV_MORPH_ERODE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_MORPH_ERODE_TOOLTIP"] = "Erode the image to remove small noisy object";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX"] = "Erode and do dilation of image: %1 with OP %2 save to %3";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_BLACK"] = "black hat morphing";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_CLOSE"] = "closed morphing";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_GRAD"] = "gradient morphing";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_OPEN"] = "open morphing";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_TOOLTIP"] = "Perform erosion and dilaton of image to remove noisy small holes and objects";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_TOPHAT"] = "top hat morphing";  // untranslated
Blockly.Msg["CV_SET_WID_HEI"] = "set %1 as %2 %3 from video capture: %4";  // untranslated
Blockly.Msg["CV_SET_WID_HEI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_SET_WID_HEI_TOOLTIP"] = "Set image width size or height size";  // untranslated
Blockly.Msg["CV_TRANS_FLIP"] = "Flip image %1 direction %2 save to %3";  // untranslated
Blockly.Msg["CV_TRANS_FLIP_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_TRANS_FLIP_HORIZON"] = "horizontal";  // untranslated
Blockly.Msg["CV_TRANS_FLIP_TOOLTIP"] = "filp the image vertically or horizontally";  // untranslated
Blockly.Msg["CV_TRANS_FLIP_VERTICAL"] = "vertical";  // untranslated
Blockly.Msg["CV_TRANS_MOVE_IMG"] = "Move image %1 with X: %2 Y: %3 save to %4";  // untranslated
Blockly.Msg["CV_TRANS_MOVE_IMG_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_TRANS_MOVE_IMG_TOOLTIP"] = "Move the image vertically or horizontally";  // untranslated
Blockly.Msg["CV_TRANS_RESIZE"] = "Resize image  %1 with  X scale: %2 Y scale: %3 save to  %4";  // untranslated
Blockly.Msg["CV_TRANS_RESIZE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_TRANS_RESIZE_TOOLTIP"] = "Scaling(resizing) the image";  // untranslated
Blockly.Msg["CV_TRANS_ROT_IMG"] = "Rotate image %1 by angle %2 scaling %3 save tp %4";  // untranslated
Blockly.Msg["CV_TRANS_ROT_IMG_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_TRANS_ROT_IMG_TOOLTIP"] = "Rotate the image";  // untranslated
Blockly.Msg["CV_UPPER_LIMIT"] = "HSV color upper limit %1 H: %2 S: %3 V: %4";  // untranslated
Blockly.Msg["CV_UPPER_LIMIT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_UPPER_LIMIT_TOOLTIP"] = "HSV upper limit value for cv2.inRange() function";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_CAM"] = "Read video image: %1 %2 video capture %3 %4 %5";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_CAM_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_CAM_TOOLTIP"] = "Read a image from video stream came from camera";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_URL"] = "Read video from URL: %1 copy to %2 %3 Using stream:  %4 %5 %6";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_URL_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_URL_TOOLTIP"] = "Read a image from video stream came from URL";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER"] = "Create video recoder: %1 file name: %2 resolution W: %3 H: %4";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER_TOOLTIP"] = "Crate video writer for video recording";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER_WR"] = "Record video image %1 uisng video writer: %2";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER_WR_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER_WR_TOOLTIP"] = "Recording current image to video file";  // untranslated
Blockly.Msg["CV_WAIT_KEY_NO_RET"] = "Wait key input during %1 milisecond";  // untranslated
Blockly.Msg["CV_WAIT_KEY_NO_RET_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_WAIT_KEY_NO_RET_TOOLTIP"] = "Wait a key input. If getting a key, finish showing image";  // untranslated
Blockly.Msg["CV_WAIT_KEY_RETURN"] = "Wait key during %1 milisecond %2 and if getting a key, save it to %3";  // untranslated
Blockly.Msg["CV_WAIT_KEY_RETURN_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_WAIT_KEY_RETURN_TOOLTIP"] = "Wait a key input. If getting a key, finish showing image. And return key input.";  // untranslated
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Tüm %1 blokları silinsin mi?";
Blockly.Msg["DELETE_BLOCK"] = "Bloğu Sil";
Blockly.Msg["DELETE_VARIABLE"] = "'%1' değişkenini silmek istiyor musunuz?";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "'%2' değişkeninin %1 kullanımını silmek istiyor musunuz?";
Blockly.Msg["DELETE_X_BLOCKS"] = "%1 Bloğunu Sil";
Blockly.Msg["DISABLE_BLOCK"] = "Bloğu Devre Dışı Bırak";
Blockly.Msg["DUPLICATE_BLOCK"] = "Yinelenen";
Blockly.Msg["DUPLICATE_COMMENT"] = "Yinelenen Yorum";
Blockly.Msg["ENABLE_BLOCK"] = "Bloğu Etkinleştir";
Blockly.Msg["EXPAND_ALL"] = "Blokları Genişlet";
Blockly.Msg["EXPAND_BLOCK"] = "Bloğu Genişlet";
Blockly.Msg["EXTERNAL_INPUTS"] = "Harici Girişler";
Blockly.Msg["HELP"] = "Yardım";
Blockly.Msg["INLINE_INPUTS"] = "Satır içi Girişler";
Blockly.Msg["IOS_CANCEL"] = "İptal";
Blockly.Msg["IOS_ERROR"] = "Hata";
Blockly.Msg["IOS_OK"] = "Tamam";
Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Giriş Ekle";
Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Açıklamalara izin ver";
Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "Bu fonksiyonda mükerrer girdi tanımlı.";
Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "GİRİŞLER";
Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Ekle";
Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Değişken Ekle";
Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Sil";
Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "Değişken adı kısmı boş bırakılamaz.";
Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Yeniden adlandır";
Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Değişken adı";
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "boş liste oluştur";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Veri kaydı içermeyen 0 uzunluğunda bir liste döndürür";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "liste";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Bu liste bloğunu yeniden yapılandırmak için bölüm ekleyin, kaldırın veya yeniden sıralayın.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "ile liste oluştur";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Listeye bir öğe ekleyin.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "İstediğiniz sayıda öğe içeren bir liste oluşturun.";
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "ilk";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "# sonundan";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "# Kare";
Blockly.Msg["LISTS_GET_INDEX_GET"] = "al";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "al ve kaldır";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "son";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "rastgele";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "kaldır";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Listedeki ilk öğeyi döndürür.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Listede belirtilen konumda bulunan öğeyi döndürür.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Listedeki son öğeyi döndürür.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Listedeki rastgele bir öğeyi döndürür.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Listedeki ilk öğeyi kaldırır ve döndürür.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Öğeyi bir listede belirtilen konumda kaldırır ve döndürür.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Listedeki son öğeyi kaldırır ve döndürür.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Listedeki rastgele bir öğeyi kaldırır ve döndürür.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Listedeki ilk öğeyi kaldırır.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Listede belirtilen konumda bulunan öğeyi kaldırır.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Listedeki son öğeyi kaldırır.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Listedeki rastgele bir öğeyi kaldırır.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "sonuna kadar #";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "#";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "sona";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "ilk önce alt listeyi al";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "# listesinden alt listeyi al";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "# listesinden alt liste al";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Listenin belirtilen bölümünün bir kopyasını oluşturur.";
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 son öğedir.";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 ilk öğedir.";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "öğenin ilk oluşumunu bul";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "öğenin son tekrarlamasını bul";
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Listedeki öğenin ilk/son oluşumunun dizinini döndürür. Öğe bulunmazsa %1 değerini döndürür.";
Blockly.Msg["LISTS_INLIST"] = "listede";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 boş";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Liste boşsa true değerini döndürür.";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "%1 uzunluğu";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Bir listenin uzunluğunu döndürür.";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "%1 tekrarlanan %2 öğeyle liste oluştur";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Belirtilen sayıda tekrarlanan belirli bir değerden oluşan bir liste oluşturur.";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "%1 ters çevirin";
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Listenin bir kopyasını ters çevirin.";
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "olarak";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "yerleştir";
Blockly.Msg["LISTS_SET_INDEX_SET"] = "ayarla";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Öğeyi listenin başına ekler.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Öğeyi bir listede belirtilen konuma ekler.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Öğeyi listenin sonuna ekleyin.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Öğeyi bir listeye rastgele ekler.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Listedeki ilk öğeyi ayarlar.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Öğeyi bir listede belirtilen konuma ayarlar.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Listedeki son öğeyi ayarlar.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Listede rastgele bir öğe ayarlar.";
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "artan";
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "azalan";
Blockly.Msg["LISTS_SORT_TITLE"] = "sıra %1 %2 %3";
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Listenin bir kopyasını sıralayın.";
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "alfabetik, görmezden gelin";
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "sayısal";
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "alfabetik";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "metinden liste yap";
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "listeden metin yap";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Metin listesini bir sınırlayıcı ile ayrılmış tek bir metinde birleştirin.";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Metni, her bir sınırlayıcıyı kırarak bir metin listesine bölün.";
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "sınırlayıcı ile";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "false";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "True veya false değerini döndürür.";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "true";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://tr.wikipedia.org/wiki/Eşitsizlikler";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Her iki giriş de birbirine eşitse true değerini döndürün.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "İlk giriş ikinci girişten büyükse true değerini döndürün.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "İlk giriş ikinci girişten büyük veya ona eşitse true değerini döndürün.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "İlk giriş ikinci girişten küçükse true değerini döndürün.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "İlk giriş ikinci girişten küçük veya ona eşitse true değerini döndürün.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Her iki giriş de birbirine eşit değilse true değerini döndürün.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "%1 değil";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Giriş yanlışsa true değerini döndürür. Giriş doğruysa false değerini döndürür.";
Blockly.Msg["LOGIC_NULL"] = "boş";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Boş değerini döndürür.";
Blockly.Msg["LOGIC_OPERATION_AND"] = "ve";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "veya";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Her iki giriş de doğruysa true döndür.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Girişlerden en az biri doğru olduğunda true değerini döndürün.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "deneme";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "if false";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "if true";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "'test' durumunu kontrol edin. Koşul true olursa, 'if true' değerini döndürür; aksi takdirde 'if false' değerini döndürür.";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://tr.wikipedia.org/wiki/Aritmetik";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "İki sayının toplamını döndürün.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "İki sayının bölümünü döndürün.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "İki sayının farkını döndürün.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "İki sayının çarpımını döndürün.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Yükseltilen ilk sayıyı ikinci sayının gücüne döndürün.";
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://tr.wikipedia.org/wiki/Atan2";
Blockly.Msg["MATH_ATAN2_TITLE"] = "atan2, X:%1 Y:%2";
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "-180'den 180'e derece cinsinden nokta (X, Y) arktanjantını döndürün.";
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://tr.wikipedia.org/wiki/Programlama_deyimi#Sayacı_artırma";
Blockly.Msg["MATH_CHANGE_TITLE"] = "%1 %2 göre değiştir";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "'%1' değişkenine bir sayı ekle.";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://tr.wikipedia.org/wiki/Matematiksel_sabit";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Ortak sabitlerden birini döndür: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), or ∞ (sonsuzluk).";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "%1 en düşük %2 en yüksek %3 ile sınırla";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Bir sayıyı belirtilen sınırlar arasında (dahil) ile sınırlandırın.";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "bölünebilir";
Blockly.Msg["MATH_IS_EVEN"] = "çift";
Blockly.Msg["MATH_IS_NEGATIVE"] = "negatif";
Blockly.Msg["MATH_IS_ODD"] = "tek";
Blockly.Msg["MATH_IS_POSITIVE"] = "pozitif";
Blockly.Msg["MATH_IS_PRIME"] = "asal";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Bir sayının çift, tek, asal, bütün, pozitif, negatif veya belirli bir sayıya bölünebilir olup olmadığını kontrol edin. True veya false değerini döndürür.";
Blockly.Msg["MATH_IS_WHOLE"] = "bütün";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://tr.wikipedia.org/wiki/Modulo_işlemi";
Blockly.Msg["MATH_MODULO_TITLE"] = "%1 ÷ %2 geri kalan kısım";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Kalanı iki sayıyı bölmekten döndürün.";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "x";
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://tr.wikipedia.org/wiki/Numara";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Sayı.";
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "liste ortalaması";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "maksimum liste";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "listenin medyanı";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "listenin en küçüğü";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "liste modları";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "listenin rastgele öğesi";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "listenin standart sapması";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "listenin toplamı";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Listedeki sayısal değerlerin ortalamasını (aritmetik ortalama) döndürün.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Listedeki en büyük sayıyı döndürün.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Listeden ortanca numarayı döndürün.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Listedeki en küçük sayıyı döndür.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Listedeki en yaygın öğenin bir listesini döndürür.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Listeden rastgele bir öğe döndürün.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Listenin standart sapmasını döndürün.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Listedeki tüm sayıların toplamını döndürün.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "üst alma";
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://tr.wikipedia.org/wiki/Rastgele_sayı_üretimi";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "rastgele kesir";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "0.0 (dahil) ve 1.0 (hariç) arasında rastgele bir kesir döndürün.";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://tr.wikipedia.org/wiki/Rastgele_sayı_üretimi";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "%1 ile %2 rastgele tam sayı üretin";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Belirtilen iki sınır arasında rastgele bir tamsayı döndürün.";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://tr.wikipedia.org/wiki/Yuvarlatma";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "yuvarla";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "aşağı yuvarla";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "yukarı yuvarla";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Bir sayıyı yukarı veya aşağı yuvarlayın.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://tr.wikipedia.org/wiki/Karekök";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "kesin";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "kare kök";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Bir sayının mutlak değerini döndürür.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "E'yi bir sayının gücüne döndür.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Bir sayının doğal logaritmasını döndür.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Bir sayının 10 logaritmasını geri döndür.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Bir sayının reddini döndür.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "10'u sayının gücüne döndür.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Bir sayının karekökünü döndürür.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "tire";
Blockly.Msg["MATH_TRIG_ACOS"] = "akosünüs";
Blockly.Msg["MATH_TRIG_ASIN"] = "asinüs";
Blockly.Msg["MATH_TRIG_ATAN"] = "atanjant";
Blockly.Msg["MATH_TRIG_COS"] = "kosünüs";
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://tr.wikipedia.org/wiki/Trigonometrik_fonksiyonlar";
Blockly.Msg["MATH_TRIG_SIN"] = "Sinüs";
Blockly.Msg["MATH_TRIG_TAN"] = "tanjant";
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Bir sayının arkosinini döndürün.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Bir sayının ark sinüsünü döndürün.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Bir sayının arktanjantını döndürün.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Bir derecenin kosinüsünü döndürün (radyan değil).";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Sinüsü bir derece döndürün (radyan değil).";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Bir derecenin tanjantını döndürün (radyan değil).";
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Renk değişkeni oluştur...";
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Sayı değişkeni oluştur...";
Blockly.Msg["NEW_STRING_VARIABLE"] = "Dizi değişkeni oluştur...";
Blockly.Msg["NEW_VARIABLE"] = "Değişken oluştur...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Yeni değişken ismi:";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "Yeni değişken tipi:";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "ifadelere izin ver";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "ile:";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Alt program";
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Kullanıcı tanımlı '%1' işlevini çalıştırın.";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Alt program";
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Kullanıcı tanımlı '%1' işlevini çalıştırın ve çıkışını kullanın.";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "ile:";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "'%1' oluştur";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Bu işlevi açıklayın...";
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "bir şey yap";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "e";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Çıkışı olmayan bir işlev oluşturur.";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "dönüş";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Çıkışa sahip bir işlev oluşturur.";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Uyarı: Bu işlev yinelenen parametrelere sahiptir.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Vurgulama işlevi tanımı";
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Bir değer true ise, ikinci bir değer döndürün.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Uyarı: Bu blok yalnızca bir işlev tanımı içinde kullanılabilir.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "giriş adı:";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "İşleve bir giriş ekleyin.";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "girişler";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Bu işleve giriş ekleyin, kaldırın veya yeniden sıralayın.";
Blockly.Msg["REDO"] = "Yinele";
Blockly.Msg["REMOVE_COMMENT"] = "Yorumu Sil";
Blockly.Msg["RENAME_VARIABLE"] = "Değişkeni yeniden adlandır...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Tüm '%1' değişkenini yeniden adlandır:";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_APPEND_TITLE"] = "%1 için %2 metnini ekle.";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "'%1' değişkenine bir metin ekleyin.";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "küçük harfe";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "Başlık Vakasına";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "ÜST DURUMA";
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Metnin bir kopyasını farklı bir durumda döndürün.";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "ilk harfini al";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "# sona harfleri al";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "# harfini al";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg["TEXT_CHARAT_LAST"] = "son harfi al";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "rastgele harf al";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";
Blockly.Msg["TEXT_CHARAT_TITLE"] = "%1 içinde %2";
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Belirtilen konumdaki harfi döndürür.";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "%1 içinde %2 say.";
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Bazı metnin başka bir metnin içinde kaç kez oluştuğunu sayın.";
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Metne bir öğe ekleyin.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "katıl";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Bu metin bloğunu yeniden yapılandırmak için bölüm ekleyin, kaldırın veya yeniden sıralayın.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "en başından # harfi";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "# harfe";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "son harfe";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "metinde";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "ilk harfinden alt dize al";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "# harfinden alt dize al";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "# harfinden alt dize al";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Metnin belirli bir bölümünü döndürür.";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "metnin ilk oluşumunu bul";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "metnin son tekrarlamasını bul";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "%1 metni içinde %2 %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "İkinci metindeki ilk metnin ilk/son oluşumunun dizinini döndürür. Metin bulunmazsa %1 değerini döndürür.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 boş";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Sağlanan metin boşsa true değerini döndürür.";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "ile metin oluştur";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "İstediğiniz sayıda öğeyi birleştirerek bir metin parçası oluşturun.";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "%1 uzunluğu";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Sağlanan metindeki harflerin (boşluklar dahil) sayısını döndürür.";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "%1 yaz";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Belirtilen metni, sayıyı veya başka bir değeri yazdırın.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Bir numara için kullanıcı sor.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Bazı metinler için kullanıcı sor.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "mesaj içeren numara istemi";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "mesaj içeren metin istemi";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "%1 yerine %3 içindeki %2 ile değiştir";
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Bazı metnin tüm tekrarlarını başka bir metnin içinde değiştirin.";
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "%1 ters çevirin";
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Metindeki karakterlerin sırasını tersine çevirir.";
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://tr.wikipedia.org/wiki/Dize_(bilgisayar_bilimi)";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Bir harf, kelime veya metin satırı.";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "her iki tarafından da kırpın";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "sol tarafındaki boşlukları kırpın";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "sağ tarafındaki boşlukları kırp";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Bir veya her iki uçtan boşluklar kaldırılmış olarak metnin bir kopyasını döndürün.";
Blockly.Msg["TODAY"] = "Bugün";
Blockly.Msg["UNDO"] = "Geri al";
Blockly.Msg["UNNAMED_KEY"] = "isimsiz";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "öge";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "'set %1' oluştur";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Bu değişkenin değerini döndürür.";
Blockly.Msg["VARIABLES_SET"] = "%1 %2 ayarla";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "'get %1' oluştur";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "Bu değişkeni girişe eşit olacak şekilde ayarlar.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "'%1' isimli değişken adı zaten var.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "'%1' isimli değişken '%2' tipli başka bir değişkende tanımlı.";
Blockly.Msg["WORKSPACE_ARIA_LABEL"] = "Blockly Çalışma Alanı";
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Bir şeyler söyle...";
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];

Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["CV_IMAGE_HUE"] = "210";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["CV_IMAGE_THRE_HUE"] = "330";
Blockly.Msg["CV_BASIC_OP_HUE"] = "160";
Blockly.Msg["CV_FIGURE_HUE"] = "230";
Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["VARIABLES_HUE"] = "330";
Blockly.Msg["CV_EDGE_DETECT_HUE"] = "210";
Blockly.Msg["CV_IMAGE_CONT_HUE"] = "80";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["CV_IMAGE_MORP_HUE"] = "290";
Blockly.Msg["CV_IMAGE_OP_HUE"] = "260";
Blockly.Msg["PROCEDURES_HUE"] = "290";
Blockly.Msg["CV_IMAGE_TRAN_HUE"] = "310";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";
Blockly.Msg["CV_CONTOUR_FIT_HUE"] = "230";
Blockly.Msg["CV_IMAGE_PRO_HUE"] = "20";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["CV_VIDEO_HUE"] = "120";
Blockly.Msg["COLOUR_HUE"] = "20";