// This file was automatically generated.  Do not modify.

'use strict';

Blockly.Msg["ADD_COMMENT"] = "Tambahkan Komentar";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "Can't delete the variable '%1' because it's part of the definition of the function '%2'";  // untranslated
Blockly.Msg["CHANGE_VALUE_TITLE"] = "Ubah nilai:";
Blockly.Msg["CLEAN_UP"] = "Bersihkan Blok";
Blockly.Msg["COLLAPSED_WARNINGS_WARNING"] = "Collapsed blocks contain warnings.";  // untranslated
Blockly.Msg["COLLAPSE_ALL"] = "Ciutkan Blok";
Blockly.Msg["COLLAPSE_BLOCK"] = "Ciutkan Blok";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "warna 1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "warna 2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg["COLOUR_BLEND_RATIO"] = "rasio";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "campur";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "Campur dua warna secara bersamaan dengan perbandingan (0.0 - 1.0).";
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://en.wikipedia.org/wiki/Color";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "Pilih warna dari daftar warna.";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "Warna acak";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "Pilih warna secara acak.";
Blockly.Msg["COLOUR_RGB_BLUE"] = "biru";
Blockly.Msg["COLOUR_RGB_GREEN"] = "hijau";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg["COLOUR_RGB_RED"] = "merah";
Blockly.Msg["COLOUR_RGB_TITLE"] = "Dengan warna";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "Buatlah warna dengan jumlah yang ditentukan dari merah, hijau dan biru. Semua nilai harus antarai 0 sampai 100.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "keluar dari perulangan";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "lanjutkan dengan langkah perulangan berikutnya";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "Keluar dari perulangan.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "Abaikan sisa dari perulangan ini, dan lanjutkan dengan langkah berikutnya.";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "Peringatan: Blok ini hanya dapat digunakan dalam perulangan.";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "untuk setiap item %1 di dalam list %2";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "Untuk tiap-tiap item di dalam list, tetapkan variabel '%1' ke dalam item, selanjutnya kerjakan beberapa statement.";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "Cacah dengan %1 dari %2 ke %3 dengan step / penambahan %4";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "Menggunakan variabel \"%1\" dengan mengambil nilai dari batas awal hingga ke batas akhir, dengan interval tertentu, dan mengerjakan block tertentu.";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "Tambahkan prasyarat ke dalam blok IF.";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "Terakhir, tambahkan kondisi tangkap-semua kedalam blok IF.";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "Tambahkan, hapus, atau susun kembali bagian untuk mengkonfigurasi blok IF ini.";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "lainnya";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "atau jika";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "jika";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "Jika nilainya benar, maka lakukan beberapa perintah.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "Jika nilainya benar, maka kerjakan perintah blok pertama. Jika tidak, kerjakan perintah blok kedua.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "Jika nilai pertama benar, maka kerjakan perintah blok pertama. Sebaliknya, jika nilai kedua benar, kerjakan perintah blok kedua.";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "Jika nilai pertama benar, maka kerjakan perintah blok pertama. Sebaliknya, jika nilai kedua benar, kerjakan perintah blok kedua. Jika dua-duanya tidak benar, kerjakan perintah blok terakhir.";
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://en.wikipedia.org/wiki/For_loop";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "kerjakan";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "ulangi %1 kali";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "Lakukan beberapa perintah beberapa kali.";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "ulangi sampai";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "ulangi jika";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "Selagi nilainya salah, maka lakukan beberapa perintah.";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "Selagi nilainya benar, maka lakukan beberapa perintah.";
Blockly.Msg["CV_ADD_IMAGE"] = "Add 2 images image1 %1 and image2 %2 save to %3";  // untranslated
Blockly.Msg["CV_ADD_IMAGE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_ADD_IMAGE_TOOLTIP"] = "Add 2 images (saturation operation)";  // untranslated
Blockly.Msg["CV_BASIC_CHG_PIXEL"] = "Change pixel value from image %1 X: %2 Y: %3 %4 as %5";  // untranslated
Blockly.Msg["CV_BASIC_CHG_PIXEL_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_CHG_PIXEL_TOOLTIP"] = "Cahnge specified pixel RGB value";  // untranslated
Blockly.Msg["CV_BASIC_COPY_ROI"] = "Copy ROI %1 to image %2 start: %3 end: %4";  // untranslated
Blockly.Msg["CV_BASIC_COPY_ROI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_COPY_ROI_TOOLTIP"] = "Copy ROI image array to an specified area of the image ";  // untranslated
Blockly.Msg["CV_BASIC_END_ROI"] = "Y from %1 to %2";  // untranslated
Blockly.Msg["CV_BASIC_END_ROI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_END_ROI_TOOLTIP"] = "End point of ROI(region of interest)";  // untranslated
Blockly.Msg["CV_BASIC_GET_PINFO"] = "Get pixel color from image %1 X: %2 Y: %3 %4 blue %5 green %6 red %7";  // untranslated
Blockly.Msg["CV_BASIC_GET_PINFO_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_GET_PINFO_TOOLTIP"] = "Get speified pixel RGB value";  // untranslated
Blockly.Msg["CV_BASIC_GET_ROI"] = "Get ROI(region of interest) from image: %1 with start %2 end %3 ROI image: %4";  // untranslated
Blockly.Msg["CV_BASIC_GET_ROI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_GET_ROI_TOOLTIP"] = "Get ROI(region of interest) of the image";  // untranslated
Blockly.Msg["CV_BASIC_GET_SIZE"] = "Get size of image %1 size: %2";  // untranslated
Blockly.Msg["CV_BASIC_GET_SIZE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_GET_SIZE_TOOLTIP"] = "Get size of the image";  // untranslated
Blockly.Msg["CV_BASIC_RGB"] = "R %1 , G %2, B %3";  // untranslated
Blockly.Msg["CV_BASIC_RGB_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_RGB_TOOLTIP"] = "RGB value";  // untranslated
Blockly.Msg["CV_BASIC_START_ROI"] = "X from %1 to %2";  // untranslated
Blockly.Msg["CV_BASIC_START_ROI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BASIC_START_ROI_TOOLTIP"] = "Start point of ROI(region of interest)";  // untranslated
Blockly.Msg["CV_BITWISE_AND"] = "Do bitwise AND operation image1 %1 and image2 %2 save to %3";  // untranslated
Blockly.Msg["CV_BITWISE_AND_TOOLTIP"] = "Bitwise AND operation of the 2 images";  // untranslated
Blockly.Msg["CV_BITWISE_NOT"] = "Do bitwise NOT operation to image %1 save to %2";  // untranslated
Blockly.Msg["CV_BITWISE_NOT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BITWISE_NOT_TOOLTIP"] = "Bitwise NOT operation of the image";  // untranslated
Blockly.Msg["CV_BITWISE_OR"] = "Do bitwise OR operation image1 %1 and image2 %2 save to %3";  // untranslated
Blockly.Msg["CV_BITWISE_OR_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_BITWISE_OR_TOOLTIP"] = "Bitwise OR operation of the 2 images";  // untranslated
Blockly.Msg["CV_CON_FEATURE_APPROX"] = "Get approximated curve of contour %1 with %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_APPROX_CLOSED"] = "closed curve";  // untranslated
Blockly.Msg["CV_CON_FEATURE_APPROX_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_APPROX_OPEN"] = "non-closed curve";  // untranslated
Blockly.Msg["CV_CON_FEATURE_APPROX_TOOLTIP"] = "Get approximated curve of the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_AREA"] = "Get area of contour %1 save to %2";  // untranslated
Blockly.Msg["CV_CON_FEATURE_AREA_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_AREA_TOOLTIP"] = "Get area of the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_BOUNDING"] = "Draw rectangle to image %1 bounding the contour  %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_BOUNDING_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_BOUNDING_TOOLTIP"] = "Draw rectangle which is bounding the contour outside";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CENTER"] = "Get center of contour line %1 center X: %2 Y: %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CENTER_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CENTER_TOOLTIP"] = "Get center point of the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CONHULL"] = "Get convex hull curve from contour %1 save to %2";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CONHULL_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_CONHULL_TOOLTIP"] = "Get convex hull curve of the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_EX_POINT"] = "Get 4 extream points for contour %1 left %2 right %3 top %4 bottom %5";  // untranslated
Blockly.Msg["CV_CON_FEATURE_EX_POINT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_EX_POINT_TOOLTIP"] = "Get 4 extream points for contour - left, right, bottom, top";  // untranslated
Blockly.Msg["CV_CON_FEATURE_FIT_ELLIPSE"] = "Draw ellipse curve to image %1 fitted for contour %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_FIT_ELLIPSE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_FIT_ELLIPSE_TOOLTIP"] = "Draw ellipse curve fitted for contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_CIRCLE"] = "Draw minimum enclosing circle to image %1 for contour  %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_CIRCLE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_CIRCLE_TOOLTIP"] = "Draw minimum area circle that enclose the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_RECT"] = "Draw minimum area rectangle to image %1 for contour  %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_RECT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_MIN_RECT_TOOLTIP"] = "Draw rectangle which occupy minimum area of the contour";  // untranslated
Blockly.Msg["CV_CON_FEATURE_PERI"] = "Get perimeter of contour %1 with %2 save to %3";  // untranslated
Blockly.Msg["CV_CON_FEATURE_PERI_CLOSED"] = "closed curve";  // untranslated
Blockly.Msg["CV_CON_FEATURE_PERI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CON_FEATURE_PERI_OPEN"] = "non-closed curve";  // untranslated
Blockly.Msg["CV_CON_FEATURE_PERI_TOOLTIP"] = "Get perimeter of the contour";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_CAM"] = "Create videocapture %1 for camera %2";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_CAM_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_CAM_TOOLTIP"] = "Create video capture instance for read video image from camera ";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_FILE"] = "Create videocapture %1 for file %2";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_FILE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CREATE_CAPTURE_FILE_TOOLTIP"] = "Create video capture instance for read video image from video file ";  // untranslated
Blockly.Msg["CV_CVT_COLOR"] = "Convert color space of %1 image:  %2 with option %3 %4 and save to  %5";  // untranslated
Blockly.Msg["CV_CVT_COLOR_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_CVT_COLOR_TOOLTIP"] = "Convert color space of the image";  // untranslated
Blockly.Msg["CV_DESTROY_ALL_WINDOW"] = "Destroy all window";  // untranslated
Blockly.Msg["CV_DESTROY_ALL_WINDOW_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DESTROY_ALL_WINDOW_TOOLTIP"] = "Close image display window";  // untranslated
Blockly.Msg["CV_DRAW_CENTER"] = "center: %1 , %2";  // untranslated
Blockly.Msg["CV_DRAW_CENTER_TOOLTIP"] = "Center point(tuple) for circle";  // untranslated
Blockly.Msg["CV_DRAW_CIRCLE"] = "Draw circle on image %1 center: %2 radian: %3 color: %4 %5 thick: %6";  // untranslated
Blockly.Msg["CV_DRAW_CIRCLE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_CIRCLE_TOOLTIP"] = "Draw a circle on the image";  // untranslated
Blockly.Msg["CV_DRAW_CONTOUR"] = "Draw contours lines of index %3 on image: %1  from contour list %2 color: %4 thick: %5 save to %6";  // untranslated
Blockly.Msg["CV_DRAW_CONTOUR_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_CONTOUR_TOOLTIP"] = "Draw contours lines on the image";  // untranslated
Blockly.Msg["CV_DRAW_CREATE_B_IMAGE"] = "Create black color image %1 x size: %2 y size: %3";  // untranslated
Blockly.Msg["CV_DRAW_CREATE_B_IMAGE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_CREATE_B_IMAGE_TOOLTIP"] = "Create black color image using numpy with given pixel size";  // untranslated
Blockly.Msg["CV_DRAW_END"] = "end: %1 , %2";  // untranslated
Blockly.Msg["CV_DRAW_END_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_END_TOOLTIP"] = "End point(tuple) for line or rectangle";  // untranslated
Blockly.Msg["CV_DRAW_LINE"] = "Draw line on image %1 start: %2 end: %3 color: %4 %5 thick: %6";  // untranslated
Blockly.Msg["CV_DRAW_LINE_TOOLTIP"] = "Draw a line on the image";  // untranslated
Blockly.Msg["CV_DRAW_LINE__HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_PUT_TEXT"] = "Put text of %1 on image %2 origin: %3 scale: %4 %5 colour: %6";  // untranslated
Blockly.Msg["CV_DRAW_PUT_TEXT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_PUT_TEXT_TOOLTIP"] = "Put text on the image";  // untranslated
Blockly.Msg["CV_DRAW_RAD_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_RECT"] = "Draw rectangle on image %1 start: %2 end: %3 color: %4 %5 thick: %6";  // untranslated
Blockly.Msg["CV_DRAW_RECT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_RECT_TOOLTIP"] = "Draw a rectangle on the image";  // untranslated
Blockly.Msg["CV_DRAW_START"] = "start: %1 , %2";  // untranslated
Blockly.Msg["CV_DRAW_START_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_START_TOOLTIP"] = "Start point(tuple) for line, or rectangle";  // untranslated
Blockly.Msg["CV_DRAW_TEXT_ORG"] = "origin: %1 , %2";  // untranslated
Blockly.Msg["CV_DRAW_TEXT_ORG_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_DRAW_TEXT_ORG_TOOLTIP"] = "Origin point(tuple) for test input. Bottom-left corner";  // untranslated
Blockly.Msg["CV_EDGE_CANNY"] = "Detect edge of image %1 uisng Canny by hysteresis min %2 hysteresis max %3 save to %4";  // untranslated
Blockly.Msg["CV_EDGE_CANNY_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_EDGE_CANNY_TOOLTIP"] = "Detect edge of the image using Canny method";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR"] = "Find all contour lines on image:  %1 mode: %2 %3 method:  %4 save to %5";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_ALL_1H"] = "all lines(2 hierachy)";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_ALL_AH"] = "all lines(all hierachy)";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_ALL_LINE"] = "all lines(no hierachy)";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_APP_NONE"] = "save all contours points";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_APP_SIMPLE"] = "save only effective points";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_APP_TC89KC05"] = "using TC89_KC05 algorithm";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_APP_TC89L1"] = "using TC89_L1 algorithm";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_EX_LINE"] = "external line only";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_FIND_CONTOUR_TOOLTIP"] = "Find all contour lines on the image";  // untranslated
Blockly.Msg["CV_GET_HUE_VALUE"] = "Get hue value for R %1 G %2 B %3 %4 and save to  %5";  // untranslated
Blockly.Msg["CV_GET_HUE_VALUE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_GET_HUE_VALUE_TOOLTIP"] = "With this block, the user can get hue value from specified RGB value";  // untranslated
Blockly.Msg["CV_IMAGE_READ"] = "Read image file  %1 %2 save to %3 %4 attribute %5";  // untranslated
Blockly.Msg["CV_IMAGE_READ_GRAYSCALE"] = "as gray scale";  // untranslated
Blockly.Msg["CV_IMAGE_READ_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IMAGE_READ_TOOLTIP"] = "Read a image from image file";  // untranslated
Blockly.Msg["CV_IMAGE_READ_UNCHANGED"] = "unchanged";  // untranslated
Blockly.Msg["CV_IMAGE_READ_WITHOUT_ALPHA"] = "without alpha";  // untranslated
Blockly.Msg["CV_IMAGE_SHAPE"] = "Get info of image %1 info:  %2 %3 %4";  // untranslated
Blockly.Msg["CV_IMAGE_SHAPE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IMAGE_SHAPE_TOOLTIP"] = "Get information of image shape - rows, columns, channels(e.g. RGB, BW)";  // untranslated
Blockly.Msg["CV_IMAGE_SHOW"] = "Show a image on window  name: %1 image: %2 %3";  // untranslated
Blockly.Msg["CV_IMAGE_SHOW_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IMAGE_SHOW_TOOLTIP"] = "Show a image on window";  // untranslated
Blockly.Msg["CV_IMAGE_THERSH_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IMAGE_THRESHOLD"] = "Get threshold-filtered image from  image %1 threshold value: %2 option %3 save to %4";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_ATTR_BINARY"] = "binary";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_ATTR_BINARY_INV"] = "binary inverse";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_ATTR_TOZERO"] = "to zero";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_ATTR_TOZERO_INV"] = "to zero inverse";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_ATTR_TRUNC"] = "truncation";  // untranslated
Blockly.Msg["CV_IMAGE_THRESH_TOOLTIP"] = "Get theshold filtered image from original image";  // untranslated
Blockly.Msg["CV_IMAGE_WRITE"] = "Save image %1 as %2";  // untranslated
Blockly.Msg["CV_IMAGE_WRITE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IMAGE_WRITE_TOOLTIP"] = "Save image as image file";  // untranslated
Blockly.Msg["CV_IN_RANGE"] = "Get masked HSV image from  image %1 HSV low limit: %2 HSV upper limit:  %3 and save to  %4";  // untranslated
Blockly.Msg["CV_IN_RANGE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_IN_RANGE_TOOLTIP"] = "Get masked HSV imamge from upper HSV value and lower HSV value";  // untranslated
Blockly.Msg["CV_LOWER_LIMIT"] = "HSV color lower limit %1 H: %2 S: %3 V: %4";  // untranslated
Blockly.Msg["CV_LOWER_LIMIT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_LOWER_LIMIT_TOOLTIP"] = "HSV lower limit value for cv2.inRange() function";  // untranslated
Blockly.Msg["CV_MORPH_DILATION"] = "Dilation of image: %1 fill up count: %2 save to %3";  // untranslated
Blockly.Msg["CV_MORPH_DILATION_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_MORPH_DILATION_TOOLTIP"] = "Perform dilation of the image to remove small vacant hole";  // untranslated
Blockly.Msg["CV_MORPH_ERODE"] = "erode the image: %1 run count: %2 save to %3";  // untranslated
Blockly.Msg["CV_MORPH_ERODE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_MORPH_ERODE_TOOLTIP"] = "Erode the image to remove small noisy object";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX"] = "Erode and do dilation of image: %1 with OP %2 save to %3";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_BLACK"] = "black hat morphing";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_CLOSE"] = "closed morphing";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_GRAD"] = "gradient morphing";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_OPEN"] = "open morphing";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_TOOLTIP"] = "Perform erosion and dilaton of image to remove noisy small holes and objects";  // untranslated
Blockly.Msg["CV_MORPH_MORPHEX_TOPHAT"] = "top hat morphing";  // untranslated
Blockly.Msg["CV_SET_WID_HEI"] = "set %1 as %2 %3 from video capture: %4";  // untranslated
Blockly.Msg["CV_SET_WID_HEI_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_SET_WID_HEI_TOOLTIP"] = "Set image width size or height size";  // untranslated
Blockly.Msg["CV_TRANS_FLIP"] = "Flip image %1 direction %2 save to %3";  // untranslated
Blockly.Msg["CV_TRANS_FLIP_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_TRANS_FLIP_HORIZON"] = "horizontal";  // untranslated
Blockly.Msg["CV_TRANS_FLIP_TOOLTIP"] = "filp the image vertically or horizontally";  // untranslated
Blockly.Msg["CV_TRANS_FLIP_VERTICAL"] = "vertical";  // untranslated
Blockly.Msg["CV_TRANS_MOVE_IMG"] = "Move image %1 with X: %2 Y: %3 save to %4";  // untranslated
Blockly.Msg["CV_TRANS_MOVE_IMG_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_TRANS_MOVE_IMG_TOOLTIP"] = "Move the image vertically or horizontally";  // untranslated
Blockly.Msg["CV_TRANS_RESIZE"] = "Resize image  %1 with  X scale: %2 Y scale: %3 save to  %4";  // untranslated
Blockly.Msg["CV_TRANS_RESIZE_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_TRANS_RESIZE_TOOLTIP"] = "Scaling(resizing) the image";  // untranslated
Blockly.Msg["CV_TRANS_ROT_IMG"] = "Rotate image %1 by angle %2 scaling %3 save tp %4";  // untranslated
Blockly.Msg["CV_TRANS_ROT_IMG_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_TRANS_ROT_IMG_TOOLTIP"] = "Rotate the image";  // untranslated
Blockly.Msg["CV_UPPER_LIMIT"] = "HSV color upper limit %1 H: %2 S: %3 V: %4";  // untranslated
Blockly.Msg["CV_UPPER_LIMIT_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_UPPER_LIMIT_TOOLTIP"] = "HSV upper limit value for cv2.inRange() function";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_CAM"] = "Read video image: %1 %2 video capture %3 %4 %5";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_CAM_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_CAM_TOOLTIP"] = "Read a image from video stream came from camera";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_URL"] = "Read video from URL: %1 copy to %2 %3 Using stream:  %4 %5 %6";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_URL_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_VIDEO_CAPTURE_URL_TOOLTIP"] = "Read a image from video stream came from URL";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER"] = "Create video recoder: %1 file name: %2 resolution W: %3 H: %4";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER_TOOLTIP"] = "Crate video writer for video recording";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER_WR"] = "Record video image %1 uisng video writer: %2";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER_WR_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_VIDEO_WRITER_WR_TOOLTIP"] = "Recording current image to video file";  // untranslated
Blockly.Msg["CV_WAIT_KEY_NO_RET"] = "Wait key input during %1 milisecond";  // untranslated
Blockly.Msg["CV_WAIT_KEY_NO_RET_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_WAIT_KEY_NO_RET_TOOLTIP"] = "Wait a key input. If getting a key, finish showing image";  // untranslated
Blockly.Msg["CV_WAIT_KEY_RETURN"] = "Wait key during %1 milisecond %2 and if getting a key, save it to %3";  // untranslated
Blockly.Msg["CV_WAIT_KEY_RETURN_HELPURL"] = "http://cobit.kr";  // untranslated
Blockly.Msg["CV_WAIT_KEY_RETURN_TOOLTIP"] = "Wait a key input. If getting a key, finish showing image. And return key input.";  // untranslated
Blockly.Msg["DELETE_ALL_BLOCKS"] = "Hapus semua %1 blok?";
Blockly.Msg["DELETE_BLOCK"] = "Hapus Blok";
Blockly.Msg["DELETE_VARIABLE"] = "Hapus variabel '%1'";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "Hapus %1 yang digunakan pada variabel '%2'?";
Blockly.Msg["DELETE_X_BLOCKS"] = "Hapus %1 Blok";
Blockly.Msg["DISABLE_BLOCK"] = "Nonaktifkan Blok";
Blockly.Msg["DUPLICATE_BLOCK"] = "Duplikat";
Blockly.Msg["DUPLICATE_COMMENT"] = "Duplicate Comment";  // untranslated
Blockly.Msg["ENABLE_BLOCK"] = "Aktifkan Blok";
Blockly.Msg["EXPAND_ALL"] = "Kembangkan Blok";
Blockly.Msg["EXPAND_BLOCK"] = "Kembangkan Blok";
Blockly.Msg["EXTERNAL_INPUTS"] = "Input Eksternal";
Blockly.Msg["HELP"] = "Bantuan";
Blockly.Msg["INLINE_INPUTS"] = "Input Inline";
Blockly.Msg["IOS_CANCEL"] = "Cancel";  // untranslated
Blockly.Msg["IOS_ERROR"] = "Error";  // untranslated
Blockly.Msg["IOS_OK"] = "OK";  // untranslated
Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+ Add Input";  // untranslated
Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "Allow statements";  // untranslated
Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "This function has duplicate inputs.";  // untranslated
Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "INPUTS";  // untranslated
Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "Add";  // untranslated
Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+ Add Variable";  // untranslated
Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "Delete";  // untranslated
Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "You can't use an empty variable name.";  // untranslated
Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "Rename";  // untranslated
Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "Variable name";  // untranslated
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "buat list kosong";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "Kembalikan list, dengan panjang 0, tidak berisi data";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "list";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "Tambahkan, hapus, atau susun ulang bagian untuk mengkonfigurasi blok list ini.";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "buat list dengan";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "Tambahkan sebuah item ke list.";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "Buat sebuah list dengan sejumlah item.";
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "pertama";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "# dari akhir";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#";
Blockly.Msg["LISTS_GET_INDEX_GET"] = "dapatkan";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "dapatkan dan hapus";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "terakhir";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "acak";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "Hapus";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "Kembalikan item pertama dalam list.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "Kembalikan item di posisi tertentu dalam list.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "Kembalikan item terakhir dalam list.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "Kembalikan item acak dalam list.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "Hapus dan kembalikan item pertama dalam list.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "Hapus dan kembalikan item di posisi tertentu dalam list.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "Hapus dan kembalikan item terakhir dalam list.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "Hapus dan kembalikan item acak dalam list.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "Hapus item pertama dalam list.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "Hapus item di posisi tertentu dalam list.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "Hapus item terakhir dalam list.";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "Hapus sebuah item acak dalam list.";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "ke # dari akhir";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "ke #";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "ke yang paling akhir";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "dapatkan sub-list dari pertama";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "dapatkan sub-list dari nomor # dari akhir";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "dapatkan sub-list dari #";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "Buat salinan bagian tertentu dari list.";
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1 adalah item terakhir.";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1 adalah item pertama.";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "cari kejadian pertama item";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "cari kejadian terakhir item";
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "Kembalikan indeks dari item pertama/terakhir kali muncul dalam list. Kembalikan %1 jika item tidak ditemukan.";
Blockly.Msg["LISTS_INLIST"] = "dalam list";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1 kosong";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "Kembalikan benar jika list kosong.";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "panjang dari %1";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "Kembalikan panjang list.";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "buat list dengan item %1 diulang %2 kali";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "Buat sebuah list yang terdiri dari nilai yang diberikan diulang sebanyak jumlah yang ditentukan.";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";  // untranslated
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "Reverse a copy of a list.";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "sebagai";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "sisipkan di";
Blockly.Msg["LISTS_SET_INDEX_SET"] = "tetapkan";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "Sisipkan item di bagian awal dari list.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "Sisipkan item ke dalam posisi yang telah ditentukan di dalam list.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "Tambahkan item ke bagian akhir list.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "Sisipkan item secara acak ke dalam list.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "Tetapkan item pertama di dalam list.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "Tetapkan item ke dalam posisi yang telah ditentukan di dalam list.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "Menetapkan item terakhir dalam list.";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "Tetapkan secara acak sebuah item dalam list.";
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "menaik";
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "menurun";
Blockly.Msg["LISTS_SORT_TITLE"] = "urutkan %1 %2 %3";
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "Urutkan salinan dari daftar";
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "sesuai abjad, abaikan kasus";
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "sesuai nomor";
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "sesuai abjad";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";  // untranslated
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "buat list dari teks";
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "buat teks dari list";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "Gabung daftar teks menjadi satu teks, yang dipisahkan oleh pembatas.";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "Membagi teks ke dalam daftar teks, pisahkan pada setiap pembatas.";
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "dengan pembatas";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "salah";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "Kembalikan benar atau salah.";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "benar";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "Kembalikan benar jika kedua input sama satu dengan lainnya.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "Kembalikan benar jika input pertama lebih besar dari input kedua.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "Kembalikan benar jika input pertama lebih besar dari atau sama dengan input kedua.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "Kembalikan benar jika input pertama lebih kecil dari input kedua.";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "Kembalikan benar jika input pertama lebih kecil atau sama dengan input kedua .";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "Kembalikan benar jika kedua input tidak sama satu dengan lainnya.";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "bukan (not) %1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "Kembalikan benar jika input salah. Kembalikan salah jika input benar.";
Blockly.Msg["LOGIC_NULL"] = "null";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "Kembalikan null.";
Blockly.Msg["LOGIC_OPERATION_AND"] = "dan";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "atau";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "Kembalikan benar jika kedua input adalah benar.";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "Kembalikan benar jika minimal satu input nilainya benar.";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "test";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "jika salah";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "jika benar";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "Periksa kondisi di 'test'. Jika kondisi benar, kembalikan nilai 'if true'; jika sebaliknya kembalikan nilai 'if false'.";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://id.wikipedia.org/wiki/Aritmetika";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "Kembalikan jumlah dari kedua angka.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "Kembalikan hasil bagi dari kedua angka.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "Kembalikan selisih dari kedua angka.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "Kembalikan perkalian dari kedua angka.";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "Kembalikan angka pertama pangkat angka kedua.";
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://en.wikipedia.org/wiki/Atan2";  // untranslated
Blockly.Msg["MATH_ATAN2_TITLE"] = "atan2 of X:%1 Y:%2";  // untranslated
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "Return the arctangent of point (X, Y) in degrees from -180 to 180.";  // untranslated
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg["MATH_CHANGE_TITLE"] = "ubah %1 oleh %2";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "Tambahkan angka kedalam variabel '%1'.";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "Kembalikan salah satu konstanta: π (3,141…), e (2,718…), φ (1,618…), akar(2) (1,414…), akar(½) (0.707…), atau ∞ (tak terhingga).";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "Batasi %1 rendah %2 tinggi %3";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "Batasi angka antara batas yang ditentukan (inklusif).";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "dapat dibagi oleh";
Blockly.Msg["MATH_IS_EVEN"] = "adalah bilangan genap";
Blockly.Msg["MATH_IS_NEGATIVE"] = "adalah bilangan negatif";
Blockly.Msg["MATH_IS_ODD"] = "adalah bilangan ganjil";
Blockly.Msg["MATH_IS_POSITIVE"] = "adalah bilangan positif";
Blockly.Msg["MATH_IS_PRIME"] = "adalah bilangan pokok";
Blockly.Msg["MATH_IS_TOOLTIP"] = "Periksa apakah angka adalah bilangan genap, bilangan ganjil, bilangan pokok, bilangan bulat, bilangan positif, bilangan negatif, atau apakan bisa dibagi oleh angka tertentu. Kembalikan benar atau salah.";
Blockly.Msg["MATH_IS_WHOLE"] = "adalah bilangan bulat";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg["MATH_MODULO_TITLE"] = "sisa dari %1 ÷ %2";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "Kembalikan sisa dari pembagian ke dua angka.";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "Suatu angka.";
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "rata-rata dari list";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "maksimum dari list";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "median dari list";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "minimum dari list";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "mode-mode dari list";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "item acak dari list";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "deviasi standar dari list";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "jumlah dari list";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "Kembalikan rata-rata (mean aritmetik) dari nilai numerik dari list.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "Kembalikan angka terbesar dari list.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "Kembalikan median dari list.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "Kembalikan angka terkecil dari list.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "Kembalikan list berisi item yang paling umum dari dalam list.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "Kembalikan elemen acak dari list.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "Kembalikan standard deviasi dari list.";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "Kembalikan jumlah dari seluruh bilangan dari list.";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "nilai pecahan acak";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "Kembalikan nilai pecahan acak antara 0.0 (inklusif) dan 1.0 (eksklusif).";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "acak bulat dari %1 sampai %2";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "Kembalikan bilangan acak antara dua batas yang ditentukan, inklusif.";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "membulatkan";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "membulatkan kebawah";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "membulatkan keatas";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "Bulatkan suatu bilangan naik atau turun.";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "mutlak";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "akar";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "Kembalikan nilai absolut angka.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "Kembalikan 10 pangkat angka.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "Kembalikan logaritma natural dari angka.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "Kembalikan dasar logaritma 10 dari angka.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "Kembalikan penyangkalan terhadap angka.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "Kembalikan 10 pangkat angka.";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "Kembalikan akar dari angka.";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";
Blockly.Msg["MATH_TRIG_ACOS"] = "acos";
Blockly.Msg["MATH_TRIG_ASIN"] = "asin";
Blockly.Msg["MATH_TRIG_ATAN"] = "atan";
Blockly.Msg["MATH_TRIG_COS"] = "cos";
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg["MATH_TRIG_SIN"] = "sin";
Blockly.Msg["MATH_TRIG_TAN"] = "tan";
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "Kembalikan acosine dari angka.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "Kembalikan asin dari angka.";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "Kembalikan atan dari angka.";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "Kembalikan cosinus dari derajat (bukan radian).";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "Kembalikan sinus dari derajat (bukan radian).";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "Kembalikan tangen dari derajat (bukan radian).";
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "Create colour variable...";  // untranslated
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "Create number variable...";  // untranslated
Blockly.Msg["NEW_STRING_VARIABLE"] = "Create string variable...";  // untranslated
Blockly.Msg["NEW_VARIABLE"] = "Buat variabel...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "Nama variabel baru:";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "New variable type:";  // untranslated
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "";  // untranslated
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "memungkinkan pernyataan";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "dengan:";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "Menjalankan fungsi '%1' yang ditetapkan pengguna.";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "Menjalankan fungsi  '%1' yang ditetapkan pengguna dan menggunakan outputnya.";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "dengan:";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "Buat '%1'";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "Jelaskan fungsi ini...";
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "";  // untranslated
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "buat sesuatu";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "untuk";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "Buat sebuah fungsi tanpa output.";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "kembali";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "Buat sebuah fungsi dengan satu output.";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "Peringatan: Fungsi ini memiliki parameter duplikat.";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "Sorot definisi fungsi";
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "Jika nilai yang benar, kemudian kembalikan nilai kedua.";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "Peringatan: Blok ini dapat digunakan hanya dalam definisi fungsi.";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "masukan Nama:";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "Tambahkan masukan ke fungsi.";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "input";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "Menambah, menghapus, atau menyusun ulang masukan untuk fungsi ini.";
Blockly.Msg["REDO"] = "Lakukan ulang";
Blockly.Msg["REMOVE_COMMENT"] = "Hapus Komentar";
Blockly.Msg["RENAME_VARIABLE"] = "Ubah nama variabel...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "Ubah nama semua variabel '%1' menjadi:";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_APPEND_TITLE"] = "untuk %1 tambahkan teks %2";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "Tambahkan beberapa teks ke variabel '%1'.";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "menjadi huruf kecil";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "menjadi huruf pertama kapital";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "menjadi huruf kapital";
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "Kembalikan kopi dari text dengan kapitalisasi yang berbeda.";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "ambil  huruf pertama";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "ambil  huruf nomor # dari belakang";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "ambil huruf ke #";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg["TEXT_CHARAT_LAST"] = "ambil  huruf terakhir";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "ambil huruf secara acak";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_CHARAT_TITLE"] = "in text %1 %2";  // untranslated
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "Kembalikan karakter dari posisi tertentu.";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";  // untranslated
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "count %1 in %2";  // untranslated
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "Count how many times some text occurs within some other text.";  // untranslated
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "Tambahkan suatu item ke dalam teks.";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "join";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "Tambah, ambil, atau susun ulang teks blok.";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "pada huruf nomer # dari terakhir";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "pada huruf #";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "pada huruf terakhir";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "in teks";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "ambil bagian teks (substring) dari huruf pertama";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "ambil bagian teks (substring) dari huruf ke # dari terakhir";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "ambil bagian teks (substring) dari huruf no #";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "Kembalikan spesifik bagian dari teks.";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "temukan kejadian pertama dalam teks";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "temukan kejadian terakhir dalam teks";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "dalam teks %1 %2 %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "Kembalikan indeks pertama dan terakhir dari kejadian pertama/terakhir dari teks pertama dalam teks kedua.  Kembalikan %1 jika teks tidak ditemukan.";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1 kosong";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "Kembalikan benar jika teks yang disediakan kosong.";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "buat teks dengan";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "Buat teks dengan cara gabungkan sejumlah item.";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "panjang dari %1";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "Kembalikan sejumlah huruf (termasuk spasi) dari teks yang disediakan.";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "cetak %1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "Cetak teks yant ditentukan, angka atau ninlai lainnya.";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "Meminta pengguna untuk memberi sebuah angka.";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "Meminta pengguna untuk memberi beberapa teks.";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "Meminta angka dengan pesan";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "meminta teks dengan pesan";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";  // untranslated
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "replace %1 with %2 in %3";  // untranslated
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "Replace all occurances of some text within some other text.";  // untranslated
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";  // untranslated
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "reverse %1";  // untranslated
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "Reverses the order of the characters in the text.";  // untranslated
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "Huruf, kata atau baris teks.";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "pangkas ruang dari kedua belah sisi";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "pangkas ruang dari sisi kiri";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "pangkas ruang dari sisi kanan";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "Kembali salinan teks dengan spasi dihapus dari satu atau kedua ujungnya.";
Blockly.Msg["TODAY"] = "Hari ini";
Blockly.Msg["UNDO"] = "Urungkan";
Blockly.Msg["UNNAMED_KEY"] = "unnamed";  // untranslated
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "item";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "Buat 'set %1'";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "Kembalikan nilai variabel ini.";
Blockly.Msg["VARIABLES_SET"] = "tetapkan %1 untuk %2";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "Buat 'get %1'";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "tetapkan variabel ini dengan input yang sama.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "Sebuah variabel dengan nama '%1' sudah ada.";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "A variable named '%1' already exists for another type: '%2'.";  // untranslated
Blockly.Msg["WORKSPACE_ARIA_LABEL"] = "Blockly Workspace";  // untranslated
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "Say something...";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];

Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["CV_IMAGE_HUE"] = "210";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["CV_IMAGE_THRE_HUE"] = "330";
Blockly.Msg["CV_BASIC_OP_HUE"] = "160";
Blockly.Msg["CV_FIGURE_HUE"] = "230";
Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["VARIABLES_HUE"] = "330";
Blockly.Msg["CV_EDGE_DETECT_HUE"] = "210";
Blockly.Msg["CV_IMAGE_CONT_HUE"] = "80";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["CV_IMAGE_MORP_HUE"] = "290";
Blockly.Msg["CV_IMAGE_OP_HUE"] = "260";
Blockly.Msg["PROCEDURES_HUE"] = "290";
Blockly.Msg["CV_IMAGE_TRAN_HUE"] = "310";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";
Blockly.Msg["CV_CONTOUR_FIT_HUE"] = "230";
Blockly.Msg["CV_IMAGE_PRO_HUE"] = "20";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["CV_VIDEO_HUE"] = "120";
Blockly.Msg["COLOUR_HUE"] = "20";